syntax = "proto3";
package bastionlab;

message Empty {}

message Reference {
    string identifier = 1;
    string name = 2;
    string description = 3;
    bytes meta = 4;
}

message TensorMetaData {
    // This message represents metadata about Tensor.
    // input_dtype --> tch::Tensor::kind() which we map onto PyTorch dtypes
    // input_shape --> List of integers representing the shape. This is transformed into PyTorch Shape
    
    repeated int64 input_shape = 1;
    repeated string input_dtype = 2;
}

message ChallengeResponse {
    bytes value = 1;
}

message SessionInfo {
    bytes token = 1;
    uint64 expiry_time = 2;

}

message ClientInfo {
    string uid = 1;
    string platform_name = 2;
    string platform_arch = 3;
    string platform_version = 4;
    string platform_release = 5;
    string user_agent = 6;
    string user_agent_version = 7;
    bool is_colab = 8;
}

service SessionService {
    rpc GetChallenge (Empty) returns (ChallengeResponse) {}
    rpc CreateSession (ClientInfo) returns (SessionInfo) {}
}
